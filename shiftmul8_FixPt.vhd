-- -------------------------------------------------------------
-- 
-- File Name: G:\AI\IIT BHU\codegen\shiftmul8\hdlsrc\shiftmul8_FixPt.vhd
-- Created: 2016-06-01 12:00:27
-- 
-- Generated by MATLAB 8.1, MATLAB Coder 2.4 and HDL Coder 3.2
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- y1                            ce_out        1
-- y3                            ce_out        1
-- y5                            ce_out        1
-- y7                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: shiftmul8_FixPt
-- Source Path: shiftmul8_FixPt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY shiftmul8_FixPt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        b1                                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        b2                                :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        b3                                :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        b4                                :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        ce_out                            :   OUT   std_logic;
        y1                                :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
        y3                                :   OUT   std_logic_vector(7 DOWNTO 0);  -- sfix8
        y5                                :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
        y7                                :   OUT   std_logic_vector(7 DOWNTO 0)  -- sfix8
        );
END shiftmul8_FixPt;


ARCHITECTURE rtl OF shiftmul8_FixPt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL b1_unsigned                      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL b2_unsigned                      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL b3_unsigned                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL b4_unsigned                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL y1_tmp                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL y3_tmp                           : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL y5_tmp                           : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL y7_tmp                           : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL shiftmul8_FixPt_d1               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL shiftmul8_FixPt_d2               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL shiftmul8_FixPt_d3               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL shiftmul8_FixPt_d4               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL shiftmul8_FixPt_cast             : signed(7 DOWNTO 0);  -- int8
  SIGNAL shiftmul8_FixPt_cast_1           : signed(7 DOWNTO 0);  -- int8
  SIGNAL shiftmul8_FixPt_cast_2           : signed(7 DOWNTO 0);  -- int8
  SIGNAL shiftmul8_FixPt_cast_3           : signed(7 DOWNTO 0);  -- int8
  SIGNAL shiftmul8_FixPt_sub_temp         : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL shiftmul8_FixPt_cast_4           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL shiftmul8_FixPt_cast_5           : signed(3 DOWNTO 0);  -- sfix4
  SIGNAL shiftmul8_FixPt_add_cast         : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL shiftmul8_FixPt_add_cast_1       : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL shiftmul8_FixPt_d4_1             : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL shiftmul8_FixPt_add_cast_2       : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL shiftmul8_FixPt_d1_1             : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL shiftmul8_FixPt_add_cast_3       : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL shiftmul8_FixPt_d3_1             : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL shiftmul8_FixPt_add_cast_4       : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL shiftmul8_FixPt_add_temp         : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL shiftmul8_FixPt_cast_6           : signed(3 DOWNTO 0);  -- sfix4
  SIGNAL shiftmul8_FixPt_cast_7           : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL shiftmul8_FixPt_add_cast_5       : signed(3 DOWNTO 0);  -- sfix4
  SIGNAL shiftmul8_FixPt_add_cast_6       : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL shiftmul8_FixPt_d3_2             : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL shiftmul8_FixPt_add_cast_7       : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL shiftmul8_FixPt_d2_1             : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL shiftmul8_FixPt_sub_cast         : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL shiftmul8_FixPt_d1_2             : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL shiftmul8_FixPt_add_cast_8       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL shiftmul8_FixPt_add_temp_1       : signed(15 DOWNTO 0);  -- sfix16

BEGIN
  b1_unsigned <= unsigned(b1);

  b2_unsigned <= unsigned(b2);

  b3_unsigned <= unsigned(b3);

  b4_unsigned <= unsigned(b4);

  enb <= clk_enable;

  --spssa
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --        Generated by MATLAB 8.1, MATLAB Coder 2.4 and HDL Coder 3.2      %
  --                                                                          %
  --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  shiftmul8_FixPt_cast <= signed(resize(b1_unsigned, 8));
  shiftmul8_FixPt_d1 <= unsigned(shiftmul8_FixPt_cast(1 DOWNTO 0));
  shiftmul8_FixPt_cast_1 <= signed(resize(b2_unsigned, 8));
  shiftmul8_FixPt_d2 <= unsigned(shiftmul8_FixPt_cast_1(1 DOWNTO 0));
  shiftmul8_FixPt_cast_2 <= signed(resize(b3_unsigned, 8));
  shiftmul8_FixPt_d3 <= unsigned(shiftmul8_FixPt_cast_2(2 DOWNTO 0));
  shiftmul8_FixPt_cast_3 <= signed(resize(b4_unsigned, 8));
  shiftmul8_FixPt_d4 <= unsigned(shiftmul8_FixPt_cast_3(2 DOWNTO 0));
  y1_tmp <= resize(resize(resize(resize(resize(b1_unsigned, 6) + resize(b2_unsigned, 6), 9) + resize(shiftmul8_FixPt_d2 sll 1, 9), 12) + resize(shiftmul8_FixPt_d3 sll 1, 12), 14) + resize(shiftmul8_FixPt_d4 sll 1, 14), 8);
  shiftmul8_FixPt_sub_temp <= resize(resize(resize(resize(b2_unsigned, 5) + resize(shiftmul8_FixPt_d1 sll 1, 5), 6) - resize(b3_unsigned, 6), 12) - resize(shiftmul8_FixPt_d4 sll 1, 12), 14) - resize(shiftmul8_FixPt_d2 sll 1, 14);
  y3_tmp <= signed(shiftmul8_FixPt_sub_temp(7 DOWNTO 0));
  shiftmul8_FixPt_cast_4 <= signed(resize(b2_unsigned, 3));
  shiftmul8_FixPt_cast_5 <=  - (resize(shiftmul8_FixPt_cast_4, 4));
  shiftmul8_FixPt_add_cast <= shiftmul8_FixPt_cast_5(2 DOWNTO 0);
  shiftmul8_FixPt_add_cast_1 <= signed(resize(b4_unsigned, 7));
  shiftmul8_FixPt_d4_1 <= shiftmul8_FixPt_d4 sll 1;
  shiftmul8_FixPt_add_cast_2 <= signed(resize(shiftmul8_FixPt_d4_1, 10));
  shiftmul8_FixPt_d1_1 <= shiftmul8_FixPt_d1 sll 1;
  shiftmul8_FixPt_add_cast_3 <= signed(resize(shiftmul8_FixPt_d1_1, 13));
  shiftmul8_FixPt_d3_1 <= shiftmul8_FixPt_d3 sll 1;
  shiftmul8_FixPt_add_cast_4 <= signed(resize(shiftmul8_FixPt_d3_1, 15));
  shiftmul8_FixPt_add_temp <= resize(resize(resize(resize(shiftmul8_FixPt_add_cast, 7) + shiftmul8_FixPt_add_cast_1, 10) + shiftmul8_FixPt_add_cast_2, 13) + shiftmul8_FixPt_add_cast_3, 15) + shiftmul8_FixPt_add_cast_4;
  y5_tmp <= unsigned(shiftmul8_FixPt_add_temp(6 DOWNTO 0));
  shiftmul8_FixPt_cast_6 <= signed(resize(b4_unsigned, 4));
  shiftmul8_FixPt_cast_7 <=  - (resize(shiftmul8_FixPt_cast_6, 5));
  shiftmul8_FixPt_add_cast_5 <= shiftmul8_FixPt_cast_7(3 DOWNTO 0);
  shiftmul8_FixPt_add_cast_6 <= signed(resize(b3_unsigned, 8));
  shiftmul8_FixPt_d3_2 <= shiftmul8_FixPt_d3 sll 1;
  shiftmul8_FixPt_add_cast_7 <= signed(resize(shiftmul8_FixPt_d3_2, 11));
  shiftmul8_FixPt_d2_1 <= shiftmul8_FixPt_d2 sll 1;
  shiftmul8_FixPt_sub_cast <= signed(resize(shiftmul8_FixPt_d2_1, 14));
  shiftmul8_FixPt_d1_2 <= shiftmul8_FixPt_d1 sll 1;
  shiftmul8_FixPt_add_cast_8 <= signed(resize(shiftmul8_FixPt_d1_2, 16));
  shiftmul8_FixPt_add_temp_1 <= resize(resize(resize(resize(shiftmul8_FixPt_add_cast_5, 8) + shiftmul8_FixPt_add_cast_6, 11) + shiftmul8_FixPt_add_cast_7, 14) - shiftmul8_FixPt_sub_cast, 16) + shiftmul8_FixPt_add_cast_8;
  y7_tmp <= shiftmul8_FixPt_add_temp_1(7 DOWNTO 0);

  y1 <= std_logic_vector(y1_tmp);

  y3 <= std_logic_vector(y3_tmp);

  y5 <= std_logic_vector(y5_tmp);

  y7 <= std_logic_vector(y7_tmp);

  ce_out <= clk_enable;

END rtl;

